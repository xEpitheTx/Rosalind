using System;

namespace CountingPointMutations
{
    class Program
    {
        static void Main(string[] args)
        {
            thing("TGAATTTCCTTTACCAGGTCTCCGGCTTATGACCGAGCCACGGAATGACTAATGGCTCACCGTAACCGCGGACACGCTTACTCGACTAATACATCCCTTATGAGCCACGTCCAGTAAAGATCGAGGCCTAGCTCATTAAGACTCGAGGAAGCGTGTTGATCTTCAAATTGGTATTATTTAGAACACTTGTTATACACATCACGTGCCCTTTTAGGCCGAGGCCCCCACCTGTGATGTTTGTTCGTAGTGTATATAGGCGTCCTCTGGATTGGTACTTCTTTGAGGCATAGTTGCGGACGGACTTCGTACTGTGGCTTACAGTTTGATGTGACAAGGAGGATCGGGGAGTAGACGTACACCTACAATAGCAAGCTAAGAGGACCTCATGGAACCATTTACAAGACAGCCAATGAAACATCTTCTTTATTTCGCTGGTTGCAAGAGCAATATCGAACCTCAATGGGATAGGAAGCCTCTATGTCACGTGACAGACTTTCGAAGCGGAGAAAAGGGCGGAGGGTAAAAGACACCGTCAGCAAGGATCTGCACTCTATGAATATGCCGTTAGATGGTGACGAGACGACCCGAGTGTTCGCCTAGCGGTATCGGCGAGGAGTCGCGCGAGGCGATCGCCTTGATCTCTGTGTAACGAGAATGGATCTTAGCCTGGGCTGTGCTGAGGAATCAGCCCCATTCAAGCAACGCGTGCATCAGGAGCTCAAGTCCTGCCATATTCTAATTTGGCCAGGCTCGTACAAGCAGGACCTCTCTGAAACAAATCTTCTGTAAAGTTCAAAGACCCTGACGCGGTAGCGTCTACGGATCTGCGTACAGGCTGTGATAGCCTCGGTCCAAATGGTCGTCTACGTTACGTGCTGTAAGCAGATGGTGAGTCGAGACCGATAGCAGAGGTGCCGGTGGATTGACGGAGCAGCATTCCTAAGGGGTATCATTAGTCCTTCCAACAGGTGAAGGGAAAAGAGTGGAAATCTCTTTCCTTAACCACTCTTCCGGCATTTGACAGAGCCACCTAAGTTCTCATGGATCGCCGTACACGCTAACAATCTTTATGGTATACTAGAACAGTCCGCAGAGCCGTCAACTTAGCAACTCGGCAAACCCAATTAGGTCTCCAGGACTAGGGTACCTATTTTCTGTGCCCTCAGGAACCTCCCTTCCGTAAAACTGCAAGAGCTGGTTAGTCTTGGATAACACGTCTATACAAATGCCTGATGCTGTTTACGGGATGTATCTAGATCTTTTCTGAATTGAGTCGAAGTCAATTTCGGAATTGGAGCTAGACCTCATAGTTCGTCGGTCATTTGTTGGTACGAAGGTGTGCGGAGTCGGACAAAAACGAACCCAGAAGAGCATATGTGTCCACTCCCAACAGAGTGGATTATCCAATATCTTAAGCGCTCTGATTACCATCGTCGGAAAATACGGCAAGATCAGGGGTACGCTCGACGGCCGTCGACAAACATCGGGAGGGGAAATGAAGAAGAAGCATTGGTGCCAGGGTCGGGATGGGTGTACTATCTATAGTTTGAACCTCAGATGGATATTGGGCGTCGCTTCTGTCCCTCTCGCGGTCTGAGCGACGCTACGGGTGACTCCATGGCCACCAGGCAATTCCAACAATAAGAGGTCTTAACATTCGCTAACGTGCGATTTCAGCTCCAATCCAGCAACGCGTGTATCCGTAGATAATGTTCTCTACTTATCTAATTTGCGCGCGTTCGGTCCGGGAGGCCCTGAATTCTGTCAACTTGCACCAAGATATTGAGAGATAAAAGCACTCTCGTCCAGCGCGGTGCGTACAGGATCTGATAGTACCAGGCTTTATTTTCACCTACACGGCTCGTCGGTTGAGGAAGCCAGGTGGGGCACTTAGTGCGATGCCTGACTTACTTGACGGCGTAGGATTGGGAAACGTTACCCCTAGATCGTTCACATGTCTCGAGGAAATGCTTGGTAA");
        }

        //Given two strings s and t of equal length, the Hamming distance between s and t, denoted dH(s, t), is the number of corresponding symbols that differ in s and t.See Figure 2.
        //Given: Two DNA strings s and t of equal length(not exceeding 1 kbp).
        //Return: The Hamming distance dH(s, t).
        private static void thing(string DNA)
        {
            int answer = 0;
            for (int character = 0; character < DNA.Length / 2; character++)
            {
                if (DNA[character] != DNA[character + (DNA.Length / 2)])
                {
                    answer++;
                }
            }
            Console.WriteLine(answer);
        }
    }
}
