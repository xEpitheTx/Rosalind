using System;

namespace FindingAMotifInDna
{
    class Program
    {
        static void Main(string[] args)
        {
            FindMotif("CAACGGTCGATTCCGGTCGACCCGGTCGACCGCGGTCGATACGGTCGACATCGTGGCGGTCGAACTCGGTCGACGGTCGATGCTGCGGTCGAACGGTCGATCGCGGTCGACGGTCGAAGGAGGCTATGGTAATCTCACGGTCGAACGGTCGACGGTCGACGGTCGATTCGGTCGAGCGGTCGACGGTCGAGAGGGTTCCGGTCGAGCCGCGGTCGACGGTCGACGGTCGACGCTCTCGGTCGAGTACAACGGTCGAGGCGGTCGACGATCGCGGTCGAAGCGGTCGATCGGTCGAAGTACGGTCGAGCGGTCGACCTTCTGCGGTCGAAGCGGTCGATGCGGTCGACGGAGCCCGCGGTCGAGCGGTCGACGGTCGACGGTCGATCGGTCGACGCGGTCGACGGTCGATCATGACTTCTACCCGGTCGAACGGTCGACGGTCGACGGTCGAACGGTCGACGTGGTGGCGGTCGAGTCGGTCGAGGCATCGGTCGATCGGTCGACGGTCGAGCGGTCGAAACGGTCGACTCGGTGTGGTGCATCGGTCGACCAGCCTCTCCGGTCGAACCGGTCGACCAAGCAGCGGTCGACGGTCGACGGTCGATCAGATCCGGTCGATCGGTCGACGGTCGAACGGTCGATCTACGGTCGAATAGGCGGTCGATTCGGTCGACGGTCGACGGTCGAACTCGGTCGAGGCGACTCGGTCGACGGTCGAAACCGGTCGACGGTCGACATCCAGTCGGTCGACGGTCGACGGTCGACAGCCCCCGGTCGATGCGGTCGATTCACATCGGTCGACACACGGTCGAACTTGCACCTCGGTCGAACGGTCGA", "CGGTCGACG");
        }

        private static void FindMotif(string s, string t)
        {
            string motif = "";
            for (int indexToCheck = 0; indexToCheck < s.Length - t.Length; indexToCheck++)
            {
                if (s.Substring(indexToCheck, t.Length) == t)
                {
                    motif += (indexToCheck + 1).ToString() + " ";
                }
            }
            Console.WriteLine(motif);
        }
    }
}
